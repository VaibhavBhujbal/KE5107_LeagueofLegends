# PC:
# setwd('C:/Users/Gebruiker 1/Dropbox/NUS/Data mining/leagueoflegends')
# laptop:
setwd('C:/Users/User/Dropbox/NUS/Data mining/leagueoflegends')
install.packages("stringr")
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Appends Num to the item
appendNum <- function(p){
paste(p, "Num", sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
matches_data$bBaronsNum <- str_count(matches_data$bBarons, "[")-1
matches_data$bBaronsNum
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Appends Num to the item
appendNum <- function(p){
paste(p, "Num", sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
matches_data$bBaronsNum <- str_count(matches_data$bBarons, "\\[")-1
matches_data$bBaronsNum
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
print(column_name)
print(output_column_name)
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data$output_column_name <- str_count(matches_data$column_name, "\\[")-1
}
write.csv(matches_data, file="data/matches_processes.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
print(i)
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
print(column_name)
print(output_column_name)
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data$output_column_name <- str_count(matches_data$column_name, "\\[")-1
}
write.csv(matches_data, file="data/matches_processed.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
print(i)
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
print(column_name)
print(output_column_name)
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
write.csv(matches_data, file="data/matches_processed.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
print(i)
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
print(column_name)
print(output_column_name)
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
head(matches_data)
# write.csv(matches_data, file="data/matches_processed.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
#head(matches_data)
write.csv(matches_data, file="matches_processed.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
#head(matches_data)
write.csv(matches_data, "data/matches_processed.csv", row.names = FALSE)
getwd()
library(ggplot2)
library(stringr)
setwd("H:\KE 5107 Projects\code\KE5107_LeagueofLegends")
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
#head(matches_data)
write.csv(matches_data, "data/matches_processed.csv", row.names = FALSE)
setwd("H:\KE 5107 Projects\code\KE5107_LeagueofLegends")
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
#head(matches_data)
write.csv(matches_data, "data/matches_processed.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("data/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
for(i in 1:length(all_kills_columns))
{
column_name <- unlist(all_kills_columns[i])
output_column_name <- paste(column_name, "Num", sep="")
# Each item is enclosed in its own square brackets. Note that there is an extra [ to contain all the elements which needs to be removed
matches_data[,output_column_name] <- str_count(matches_data[,column_name], "\\[")-1
}
#head(matches_data)
write.csv(matches_data, "processed/matches.csv", row.names = FALSE)
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
prependRed <- function(p){
paste("r", p, sep="")
}
# Prepends b to the item
prependBlue <- function(p){
paste("b", p, sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, prependBlue)
red_kills_columns <- lapply(game_elements, prependRed)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
all_kills_columns
#cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Prepends r to the item
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Prepends b to the item
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the Kills columns for blue and red teams
blue_kills_columns <- lapply(game_elements, getBlueColumnName)
red_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_kills_columns <- c(blue_kills_columns, red_kills_columns)
all_kills_columns
#cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
head(matches_data[,all_num_kills_columns])
#cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
head(matches_data[,unlist(all_num_kills_columns)])
#cor(matches_data[,all_kills_columns])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
cor(matches_data[,unlist(all_num_kills_columns)])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
all_num_kills_columns_with_result <- c(all_num_kills_columns, "bResult")
matches_data[,unlist(all_num_kills_columns_with_result)]
# cor(matches_data[,unlist(all_num_kills_columns_with_result)])
library(ggplot2)
library(stringr)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
all_num_kills_columns_with_result <- c(all_num_kills_columns, "bResult")
# head(matches_data[,unlist(all_num_kills_columns_with_result)])
# Get correlation between the number of kills and the result of the match
cor(matches_data[,unlist(all_num_kills_columns_with_result)])
library(corrplot)
setwd("H:\\KE 5107 Projects\\code\\KE5107_LeagueofLegends")
matches_data = read.csv("processed/matches.csv")
game_elements <- c("Towers", "Inhibs", "Dragons", "Barons", "Heralds")
# Get the column name for the red team
getRedColumnName <- function(p){
paste("r", p, "Num", sep="")
}
# Get the column name for the blue team
getBlueColumnName <- function(p){
paste("b", p, "Num", sep="")
}
# Get the number of Kills columns for blue and red teams
blue_num_kills_columns <- lapply(game_elements, getBlueColumnName)
red_num_kills_columns <- lapply(game_elements, getRedColumnName)
# Combine the Kills columns
all_num_kills_columns <- c(blue_num_kills_columns, red_num_kills_columns)
all_num_kills_columns_with_result <- c(all_num_kills_columns, "bResult")
# head(matches_data[,unlist(all_num_kills_columns_with_result)])
# Get correlation between the number of kills and the result of the match
killscor <- cor(matches_data[,unlist(all_num_kills_columns_with_result)])
corrplot(killscor, method = "circle")
x <- "[[24.577, None], [37.867, None], [30.87, None], [18.255, None]]"
gsub('^.*\\[[*,.*$','',x)
gsub('^.*\\[\\[*,.*$','',x)
gsub('^.*\\[\\[*,.*$','',x)[1]
length(gsub('^.*\\[\\[*,.*$','',x))
gsub('\\[\\[[0-9]*.[0-9]*','',x)
gsub('^.*\\[\\[[0-9]*.[0-9]*','',x)
gsub('^.\\[\\[[0-9]*.[0-9]*','',x)
gsub('^\[\[[[0-9]*.[0-9]*','\\1',x)
gsub('^\\[\\[[0-9]*.[0-9]*','\\1',x)
gsub('^\\[\\[[0-9]*.[0-9]*','\\2',x)
gsub('^\\[\\[[0-9]*.[0-9]*','\\0',x)
